{"ast":null,"code":"import _slicedToArray from \"/Users/muhammadharis/Documents/Projects/Task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/muhammadharis/Documents/Projects/Task/src/views/Pages/Signin.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { signin } from \"../../services/redux/actions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport history from \"../../services/History\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport sweetAlertStyle from \"assets/jss/material-dashboard-pro-react/views/sweetAlertStyle.jsx\";\nimport { successColor } from \"assets/jss/material-dashboard-pro-react\";\nimport { primaryColor, cardTitle, dangerColor, whiteColor, grayColor } from \"assets/jss/material-dashboard-pro-react.jsx\";\nvar useStyles = makeStyles(function () {\n  return {\n    signupButton: {\n      marginTop: 30,\n      marginBottom: 15,\n      backgroundColor: '#000',\n      color: 'whitesmoke',\n      \"&:hover\": {\n        backgroundColor: \"#ffa300  !important\",\n        color: \"white\"\n      }\n    },\n    signinButton: {\n      marginBottom: 30,\n      backgroundColor: '#000',\n      color: 'whitesmoke',\n      \"&:hover\": {\n        backgroundColor: \"#ffa300  !important\",\n        color: \"white\"\n      }\n    },\n    successButton: {\n      backgroundColor: \"\".concat(successColor[0], \" !important\"),\n      \"&:hover\": {\n        backgroundColor: \"\".concat(successColor[0], \" !important\")\n      }\n    },\n    error: {\n      color: \"red\"\n    }\n  };\n});\n\nvar Signin = function Signin(props) {\n  var _ref = props || {},\n      signin = _ref.signin,\n      users = _ref.users,\n      user = _ref.user;\n\n  useEffect(function () {\n    setEmail(\"\");\n    setPassword(\"\");\n    setSwAlert(null);\n  }, []);\n  useEffect(function () {\n    if (user && user.EMAIL) {\n      history.entries = [];\n      history.index = -1;\n      history.push(\"/app/Dashboard\");\n    }\n  }, [user]);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      emailError = _useState6[0],\n      setEmailError = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      passwordError = _useState8[0],\n      setPasswordError = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      swAlert = _useState10[0],\n      setSwAlert = _useState10[1];\n\n  var customStyles = useStyles();\n\n  var onSignin = function onSignin() {\n    var error = false;\n\n    if (email) {\n      setEmailError(false);\n    } else {\n      setEmailError(true);\n      error = true;\n    }\n\n    if (password) {\n      setPasswordError(false);\n    } else {\n      setPasswordError(true);\n      error = true;\n    }\n\n    if (!error) {\n      var _user = {\n        EMAIL: email,\n        PASSWORD: password\n      };\n      var allUsers = users;\n      var authUser = allUsers.find(function (u) {\n        return u.EMAIL === _user.EMAIL && u.PASSWORD === _user.PASSWORD;\n      });\n\n      if (authUser && authUser.EMAIL) {\n        signin(_user);\n      } else {\n        signin({});\n        setSwAlert( /*#__PURE__*/React.createElement(SweetAlert, {\n          error: true,\n          style: {\n            display: \"block\",\n            marginTop: \"-100px\"\n          },\n          title: \"Invalid Email or Password\",\n          onConfirm: function onConfirm() {\n            return setSwAlert(null);\n          },\n          confirmBtnCssClass: \"\".concat(props.classes.button, \" \").concat(customStyles.successButton),\n          confirmBtnText: \"Ok\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n  };\n\n  var onSignup = function onSignup() {\n    history.push(\"/app/signup\");\n  };\n\n  return /*#__PURE__*/React.createElement(GridContainer, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, swAlert, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    icon: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    sm: 12,\n    md: 12,\n    xs: 12,\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: \"#000\",\n      fontSize: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }, \"Sign In\"))))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    style: {\n      flex: \"display\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    sm: 10,\n    md: 10,\n    xs: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    sm: 12,\n    md: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    label: \"Email\",\n    value: email,\n    fullWidth: true,\n    style: {\n      marginBottom: 20\n    },\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    helperText: emailError && /*#__PURE__*/React.createElement(\"div\", {\n      className: customStyles.error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 27\n      }\n    }, \"Please enter email\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(GridItem, {\n    sm: 12,\n    md: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    label: \"Password\",\n    value: password,\n    fullWidth: true,\n    style: {\n      marginBottom: 20\n    },\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    helperText: passwordError && /*#__PURE__*/React.createElement(\"div\", {\n      className: customStyles.error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 27\n      }\n    }, \"Please enter password\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(GridItem, {\n    sm: 12,\n    md: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: customStyles.signupButton,\n    onClick: onSignin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\" //color={primaryColor[0]}\n    //style={{backgroundColor:'#ffa300',color:'whitesmoke'}}\n    ,\n    className: customStyles.signinButton,\n    onClick: onSignup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, \"Don't have an account? Signup\")))))))));\n};\n\nSignin.propTypes = {\n  classes: PropTypes.object.isRequired,\n  signin: PropTypes.func\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    users: state.users\n  };\n};\n\nvar contactPageWithRedux = connect(mapStateToProps, {\n  signin: signin\n})(Signin);\nexport default withStyles(sweetAlertStyle)(contactPageWithRedux);","map":{"version":3,"sources":["/Users/muhammadharis/Documents/Projects/Task/src/views/Pages/Signin.js"],"names":["React","useEffect","useState","GridContainer","GridItem","Card","CardBody","CardHeader","PropTypes","withStyles","connect","makeStyles","signin","TextField","Typography","Button","history","SweetAlert","sweetAlertStyle","successColor","primaryColor","cardTitle","dangerColor","whiteColor","grayColor","useStyles","signupButton","marginTop","marginBottom","backgroundColor","color","signinButton","successButton","error","Signin","props","users","user","setEmail","setPassword","setSwAlert","EMAIL","entries","index","push","email","password","emailError","setEmailError","passwordError","setPasswordError","swAlert","customStyles","onSignin","PASSWORD","allUsers","authUser","find","u","display","classes","button","onSignup","justifyContent","alignItems","fontSize","flex","e","target","value","propTypes","object","isRequired","func","mapStateToProps","state","contactPageWithRedux"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { signin } from \"../../services/redux/actions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport history from \"../../services/History\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport sweetAlertStyle from \"assets/jss/material-dashboard-pro-react/views/sweetAlertStyle.jsx\";\nimport { successColor } from \"assets/jss/material-dashboard-pro-react\";\nimport {\n  primaryColor,\n  cardTitle,\n  dangerColor,\n  whiteColor,\n  grayColor\n} from \"assets/jss/material-dashboard-pro-react.jsx\";\nconst useStyles = makeStyles(() => ({\n  signupButton: {\n    marginTop: 30,\n    marginBottom: 15,\n    backgroundColor:'#000',\n    color:'whitesmoke',\n    \"&:hover\": {\n      backgroundColor: \"#ffa300  !important\",\n      color: \"white\"\n    }\n  },\n  signinButton: {\n    marginBottom: 30,\n    backgroundColor:'#000',\n    color:'whitesmoke',\n    \"&:hover\": {\n      backgroundColor: \"#ffa300  !important\",\n      color: \"white\"\n    }\n  },\n  successButton: {\n    backgroundColor: `${successColor[0]} !important`,\n    \"&:hover\": {\n      backgroundColor: `${successColor[0]} !important`\n    }\n  },\n  error: {\n    color: \"red\"\n  }\n}));\n\nconst Signin = props => {\n  const { signin, users, user } = props || {};\n\n  useEffect(() => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setSwAlert(null);\n  }, []);\n\n  useEffect(() => {\n    if (user && user.EMAIL) {\n      history.entries = [];\n      history.index = -1;\n      history.push(`/app/Dashboard`);\n    }\n  }, [user]);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const [swAlert, setSwAlert] = useState(null);\n\n  const customStyles = useStyles();\n\n  const onSignin = () => {\n    let error = false;\n    if (email) {\n      setEmailError(false);\n    } else {\n      setEmailError(true);\n      error = true;\n    }\n    if (password) {\n      setPasswordError(false);\n    } else {\n      setPasswordError(true);\n      error = true;\n    }\n    if (!error) {\n      const user = {\n        EMAIL: email,\n        PASSWORD: password\n      };\n      const allUsers = users;\n      const authUser = allUsers.find(\n        u => u.EMAIL === user.EMAIL && u.PASSWORD === user.PASSWORD\n      );\n      if (authUser && authUser.EMAIL) {\n        signin(user);\n      } else {\n        signin({});\n        setSwAlert(\n          <SweetAlert\n            error\n            style={{ display: \"block\", marginTop: \"-100px\" }}\n            title=\"Invalid Email or Password\"\n            onConfirm={() => setSwAlert(null)}\n            confirmBtnCssClass={`${props.classes.button} ${customStyles.successButton}`}\n            confirmBtnText=\"Ok\"\n          />\n        );\n      }\n    }\n  };\n\n  const onSignup = () => {\n    history.push(\"/app/signup\");\n  };\n\n  return (\n    <GridContainer\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      {swAlert}\n      <GridItem xs={5}>\n        <Card>\n          <CardHeader color=\"primary\" icon>\n            <GridContainer>\n              <GridItem\n                sm={12}\n                md={12}\n                xs={12}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  marginTop: 20\n                }}\n              >\n                <GridItem>\n                  <Typography style={{ color: \"#000\", fontSize: 30 }}>\n                    Sign In\n                  </Typography>\n                </GridItem>\n              </GridItem>\n            </GridContainer>\n          </CardHeader>\n          <CardBody>\n            <GridContainer\n              style={{\n                flex: \"display\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              <GridItem sm={10} md={10} xs={10}>\n                <GridContainer>\n                  <GridItem sm={12} md={12} xs={12}>\n                    <TextField\n                      required\n                      label=\"Email\"\n                      value={email}\n                      fullWidth\n                      style={{ marginBottom: 20 }}\n                      onChange={e => setEmail(e.target.value)}\n                      helperText={\n                        emailError && (\n                          <div className={customStyles.error}>\n                            Please enter email\n                          </div>\n                        )\n                      }\n                    />\n                  </GridItem>\n                  <GridItem sm={12} md={12} xs={12}>\n                    <TextField\n                      required\n                      label=\"Password\"\n                      value={password}\n                      fullWidth\n                      style={{ marginBottom: 20 }}\n                      onChange={e => setPassword(e.target.value)}\n                      helperText={\n                        passwordError && (\n                          <div className={customStyles.error}>\n                            Please enter password\n                          </div>\n                        )\n                      }\n                    />\n                  </GridItem>\n                  <GridItem sm={12} md={12} xs={12}>\n                    <Button\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={customStyles.signupButton}\n                      onClick={onSignin}\n                    >\n                      Login\n                    </Button>\n                    <Button\n                      fullWidth\n                      variant=\"contained\"\n                      //color={primaryColor[0]}\n                      //style={{backgroundColor:'#ffa300',color:'whitesmoke'}}\n                      className={customStyles.signinButton}\n                      onClick={onSignup}\n                    >\n                      {`Don't have an account? Signup`}\n                    </Button>\n                  </GridItem>\n                </GridContainer>\n              </GridItem>\n            </GridContainer>\n          </CardBody>\n        </Card>\n      </GridItem>\n    </GridContainer>\n  );\n};\n\nSignin.propTypes = {\n  classes: PropTypes.object.isRequired,\n  signin: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    users: state.users\n  };\n};\nconst contactPageWithRedux = connect(\n  mapStateToProps,\n  {\n    signin\n  }\n)(Signin);\nexport default withStyles(sweetAlertStyle)(contactPageWithRedux);\n"]},"metadata":{},"sourceType":"module"}