{"ast":null,"code":"import _slicedToArray from \"/Users/muhammadharis/Documents/Projects/Task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/muhammadharis/Documents/Projects/Task/src/views/Pages/Signup.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { signup } from \"../../services/redux/actions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport history from \"../../services/History\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport sweetAlertStyle from \"assets/jss/material-dashboard-pro-react/views/sweetAlertStyle.jsx\";\nimport { successColor } from \"assets/jss/material-dashboard-pro-react\";\nvar useStyles = makeStyles(function () {\n  return {\n    signupButton: {\n      marginTop: 30,\n      marginBottom: 15,\n      color: \"white\",\n      backgroundColor: \"#000 !important\",\n      \"&:hover\": {\n        backgroundColor: \"#ffa300  !important\",\n        color: \"white\"\n      }\n    },\n    signinButton: {\n      marginBottom: 30,\n      color: \"white\",\n      backgroundColor: \"#000 !important\",\n      \"&:hover\": {\n        backgroundColor: \"#ffa300  !important\",\n        color: \"white\"\n      }\n    },\n    successButton: {\n      backgroundColor: \"\".concat(successColor[0], \" !important\"),\n      \"&:hover\": {\n        backgroundColor: \"\".concat(successColor[0], \" !important\")\n      }\n    },\n    error: {\n      color: \"red\"\n    }\n  };\n});\n\nvar Signup = function Signup(props) {\n  var _ref = props || {},\n      signup = _ref.signup,\n      user = _ref.user;\n\n  useEffect(function () {\n    setEmail(\"\");\n    setPassword(\"\");\n    setConfirmPassword(\"\");\n    setSwAlert(null);\n  }, []);\n  useEffect(function () {\n    if (user && user.EMAIL) {\n      history.entries = [];\n      history.index = -1;\n      history.push(\"/app/Dashboard\");\n    }\n  }, [user]);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmPassword = _useState6[0],\n      setConfirmPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      emailError = _useState8[0],\n      setEmailError = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      passwordError = _useState10[0],\n      setPasswordError = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      confirmPasswordError = _useState12[0],\n      setConfirmPasswordError = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      swAlert = _useState14[0],\n      setSwAlert = _useState14[1];\n\n  var customStyles = useStyles();\n\n  var onSignup = function onSignup() {\n    var error = false;\n\n    if (email === '' || email === undefined) {\n      setEmailError(true);\n      error = true;\n    } else {\n      setEmailError(false);\n    }\n\n    if (password) {\n      setPasswordError(false);\n    } else {\n      setPasswordError(true);\n      error = true;\n    }\n\n    if (confirmPassword && confirmPassword === password) {\n      setConfirmPasswordError(false);\n    } else {\n      setConfirmPasswordError(true);\n      error = true;\n    }\n\n    if (!error) {\n      var newUser = {\n        EMAIL: email,\n        PASSWORD: password\n      };\n      signup(newUser);\n      setSwAlert( /*#__PURE__*/React.createElement(SweetAlert, {\n        success: true,\n        style: {\n          display: \"block\",\n          marginTop: \"-100px\"\n        },\n        title: \"User Registsred Successfully\",\n        onConfirm: function onConfirm() {\n          return history.push(\"/app/signin\");\n        },\n        confirmBtnCssClass: \"\".concat(props.classes.button, \" \").concat(customStyles.successButton),\n        confirmBtnText: \"Ok\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }));\n    }\n  };\n\n  var onSignin = function onSignin() {\n    history.push(\"/app/signin\");\n  };\n\n  return /*#__PURE__*/React.createElement(GridContainer, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, swAlert, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    icon: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    sm: 12,\n    md: 12,\n    xs: 12,\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: \"#000\",\n      fontSize: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, \"Sign Up\"))))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    style: {\n      flex: \"display\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    sm: 10,\n    md: 10,\n    xs: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    sm: 12,\n    md: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    label: \"Email\",\n    value: email,\n    fullWidth: true,\n    style: {\n      marginBottom: 20\n    },\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    helperText: emailError && /*#__PURE__*/React.createElement(\"div\", {\n      className: customStyles.error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 27\n      }\n    }, \"Please enter email\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(GridItem, {\n    sm: 12,\n    md: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    label: \"Password\",\n    value: password,\n    fullWidth: true,\n    style: {\n      marginBottom: 20\n    },\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    helperText: passwordError && /*#__PURE__*/React.createElement(\"div\", {\n      className: customStyles.error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 27\n      }\n    }, \"Please enter password\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(GridItem, {\n    sm: 12,\n    md: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    label: \"Confirm Password\",\n    value: confirmPassword,\n    fullWidth: true,\n    onChange: function onChange(e) {\n      return setConfirmPassword(e.target.value);\n    },\n    style: {\n      marginBottom: 20\n    },\n    helperText: confirmPasswordError && /*#__PURE__*/React.createElement(\"div\", {\n      className: customStyles.error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 27\n      }\n    }, \"Please enter confirm password\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(GridItem, {\n    sm: 12,\n    md: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\" //color=\"primary\"\n    ,\n    className: customStyles.signupButton,\n    onClick: onSignup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\" //color=\"primary\"\n    ,\n    className: customStyles.signinButton,\n    onClick: onSignin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, \"Already have an account? Signin\")))))))));\n};\n\nSignup.propTypes = {\n  classes: PropTypes.object.isRequired,\n  signup: PropTypes.func\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar contactPageWithRedux = connect(mapStateToProps, {\n  signup: signup\n})(Signup);\nexport default withStyles(sweetAlertStyle)(contactPageWithRedux);","map":{"version":3,"sources":["/Users/muhammadharis/Documents/Projects/Task/src/views/Pages/Signup.js"],"names":["React","useEffect","useState","GridContainer","GridItem","Card","CardBody","CardHeader","PropTypes","withStyles","connect","makeStyles","signup","TextField","Typography","Button","history","SweetAlert","sweetAlertStyle","successColor","useStyles","signupButton","marginTop","marginBottom","color","backgroundColor","signinButton","successButton","error","Signup","props","user","setEmail","setPassword","setConfirmPassword","setSwAlert","EMAIL","entries","index","push","email","password","confirmPassword","emailError","setEmailError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","swAlert","customStyles","onSignup","undefined","newUser","PASSWORD","display","classes","button","onSignin","justifyContent","alignItems","fontSize","flex","e","target","value","propTypes","object","isRequired","func","mapStateToProps","state","contactPageWithRedux"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { signup } from \"../../services/redux/actions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport history from \"../../services/History\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport sweetAlertStyle from \"assets/jss/material-dashboard-pro-react/views/sweetAlertStyle.jsx\";\nimport { successColor } from \"assets/jss/material-dashboard-pro-react\";\n\nconst useStyles = makeStyles(() => ({\n  signupButton: {\n    marginTop: 30,\n    marginBottom: 15,\n    color: \"white\",\n    backgroundColor: \"#000 !important\",\n    \"&:hover\": {\n      backgroundColor: \"#ffa300  !important\",\n      color: \"white\"\n    }\n  },\n  signinButton: {\n    marginBottom: 30,\n    color: \"white\",\n    backgroundColor: \"#000 !important\",\n    \"&:hover\": {\n      backgroundColor: \"#ffa300  !important\",\n      color: \"white\"\n    }\n  },\n  successButton: {\n    backgroundColor: `${successColor[0]} !important`,\n    \"&:hover\": {\n      backgroundColor: `${successColor[0]} !important`\n    }\n  },\n  error: {\n    color: \"red\"\n  }\n}));\n\nconst Signup = props => {\n  const { signup, user } = props || {};\n\n  useEffect(() => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setConfirmPassword(\"\");\n    setSwAlert(null);\n  }, []);\n\n  useEffect(() => {\n    if (user && user.EMAIL) {\n      history.entries = [];\n      history.index = -1;\n      history.push(`/app/Dashboard`);\n    }\n  }, [user]);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [confirmPasswordError, setConfirmPasswordError] = useState(false);\n\n  const [swAlert, setSwAlert] = useState(null);\n\n  const customStyles = useStyles();\n\n  const onSignup = () => {\n    let error = false;\n    if (email===''||email===undefined) {\n      setEmailError(true);\n      error = true;\n    } else {\n      setEmailError(false);\n      \n    }\n    if (password) {\n      setPasswordError(false);\n    } else {\n      setPasswordError(true);\n      error = true;\n    }\n    if (confirmPassword && confirmPassword===password ) {\n      setConfirmPasswordError(false);\n    } else {\n      setConfirmPasswordError(true);\n      error = true;\n    }\n    if (!error) {\n      const newUser = {\n        EMAIL: email,\n        PASSWORD: password\n      };\n      signup(newUser);\n      setSwAlert(\n        <SweetAlert\n          success\n          style={{ display: \"block\", marginTop: \"-100px\" }}\n          title=\"User Registsred Successfully\"\n          onConfirm={() => history.push(\"/app/signin\")}\n          confirmBtnCssClass={`${props.classes.button} ${customStyles.successButton}`}\n          confirmBtnText=\"Ok\"\n        />\n      );\n    }\n  };\n\n  const onSignin = () => {\n    history.push(\"/app/signin\");\n  };\n\n  return (\n    <GridContainer\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      {swAlert}\n      <GridItem xs={5}>\n        <Card>\n          <CardHeader color=\"primary\" icon>\n            <GridContainer>\n              <GridItem\n                sm={12}\n                md={12}\n                xs={12}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  marginTop: 20\n                }}\n              >\n                <GridItem>\n                  <Typography style={{ color: \"#000\", fontSize: 30 }}>\n                    Sign Up\n                  </Typography>\n                </GridItem>\n              </GridItem>\n            </GridContainer>\n          </CardHeader>\n          <CardBody>\n            <GridContainer\n              style={{\n                flex: \"display\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              <GridItem sm={10} md={10} xs={10}>\n                <GridContainer>\n                  <GridItem sm={12} md={12} xs={12}>\n                    <TextField\n                      required\n                      label=\"Email\"\n                      value={email}\n                      fullWidth\n                      style={{ marginBottom: 20 }}\n                      onChange={e => setEmail(e.target.value)}\n                      helperText={\n                        emailError && (\n                          <div className={customStyles.error}>\n                            Please enter email\n                          </div>\n                        )\n                      }\n                    />\n                  </GridItem>\n                  <GridItem sm={12} md={12} xs={12}>\n                    <TextField\n                      required\n                      label=\"Password\"\n                      value={password}\n                      fullWidth\n                      style={{ marginBottom: 20 }}\n                      onChange={e => setPassword(e.target.value)}\n                      helperText={\n                        passwordError && (\n                          <div className={customStyles.error}>\n                            Please enter password\n                          </div>\n                        )\n                      }\n                    />\n                  </GridItem>\n                  <GridItem sm={12} md={12} xs={12}>\n                    <TextField\n                      required\n                      label=\"Confirm Password\"\n                      value={confirmPassword}\n                      fullWidth\n                      onChange={e => setConfirmPassword(e.target.value)}\n                      style={{ marginBottom: 20 }}\n                      helperText={\n                        confirmPasswordError && (\n                          <div className={customStyles.error}>\n                            Please enter confirm password\n                          </div>\n                        )\n                      }\n                    />\n                  </GridItem>\n                  <GridItem sm={12} md={12} xs={12}>\n                    <Button\n                      fullWidth\n                      variant=\"contained\"\n                      //color=\"primary\"\n                      className={customStyles.signupButton}\n                      onClick={onSignup}\n                    >\n                      Register\n                    </Button>\n                    <Button\n                      fullWidth\n                      variant=\"contained\"\n                      //color=\"primary\"\n                      className={customStyles.signinButton}\n                      onClick={onSignin}\n                    >\n                      Already have an account? Signin\n                    </Button>\n                  </GridItem>\n                </GridContainer>\n              </GridItem>\n            </GridContainer>\n          </CardBody>\n        </Card>\n      </GridItem>\n    </GridContainer>\n  );\n};\n\nSignup.propTypes = {\n  classes: PropTypes.object.isRequired,\n  signup: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\nconst contactPageWithRedux = connect(\n  mapStateToProps,\n  {\n    signup\n  }\n)(Signup);\nexport default withStyles(sweetAlertStyle)(contactPageWithRedux);\n"]},"metadata":{},"sourceType":"module"}