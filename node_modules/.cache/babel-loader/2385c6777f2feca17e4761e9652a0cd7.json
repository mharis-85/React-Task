{"ast":null,"code":"import _classCallCheck from \"/Users/muhammadharis/Documents/Projects/Task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/muhammadharis/Documents/Projects/Task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/muhammadharis/Documents/Projects/Task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/muhammadharis/Documents/Projects/Task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/muhammadharis/Documents/Projects/Task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/muhammadharis/Documents/Projects/Task/src/layouts/App.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route } from \"react-router-dom\";\nimport DashboardView from '../views/Pages/Dashboard'; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport routes from \"routes.js\";\nimport appStyle from \"assets/jss/material-dashboard-pro-react/layouts/adminStyle.jsx\";\nimport notificationsStyle from \"assets/jss/material-dashboard-pro-react/views/notificationsStyle.jsx\";\nimport sweetAlertStyle from \"assets/jss/material-dashboard-pro-react/views/sweetAlertStyle.jsx\";\nvar useStyles = {\n  okButton: {\n    textAlign: \"center\",\n    backgroundColor: \"#A4A4A4 !important\",\n    \"&:hover\": {\n      backgroundColor: \"#fc5f45 !important\"\n    }\n  },\n  soundGoodButton: {\n    textAlign: \"center\",\n    backgroundColor: \"#405fc4 !important\",\n    \"&:hover\": {\n      backgroundColor: \"#405fc4 !important\"\n    }\n  }\n};\n\nvar Dashboard = /*#__PURE__*/function (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  var _super = _createSuper(Dashboard);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _super.call(this, props);\n    _this.mainPanel = React.createRef();\n\n    _this.handleDrawerToggle = function () {\n      _this.setState({\n        mobileOpen: !_this.state.mobileOpen\n      });\n    };\n\n    _this.getActiveRoute = function (routes) {\n      var activeRoute = \"Default Brand Text\";\n\n      for (var i = 0; i < routes.length; i++) {\n        if (routes[i].collapse) {\n          var collapseActiveRoute = _this.getActiveRoute(routes[i].views);\n\n          if (collapseActiveRoute !== activeRoute) {\n            return collapseActiveRoute;\n          }\n        } else {\n          if (window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1) {\n            return routes[i].name;\n          }\n        }\n      }\n\n      return activeRoute;\n    };\n\n    _this.getRoutes = function (routes) {\n      return routes.map(function (prop, key) {\n        if (prop.collapse) {\n          return _this.getRoutes(prop.views);\n        }\n\n        if (prop.layout === \"/app\") {\n          return /*#__PURE__*/React.createElement(Route, {\n            path: prop.layout + prop.path,\n            component: prop.component,\n            key: key,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 11\n            }\n          });\n        } else {\n          return null;\n        }\n      });\n    };\n\n    _this.sidebarMinimize = function () {\n      _this.setState({\n        miniActive: !_this.state.miniActive\n      });\n    };\n\n    _this.resizeFunction = function () {\n      if (window.innerWidth >= 960) {\n        _this.setState({\n          mobileOpen: false\n        });\n      }\n    };\n\n    _this.state = {\n      mobileOpen: false,\n      miniActive: false,\n      image: require(\"assets/img/sidebar-5.jpg\"),\n      color: \"blue\",\n      bgColor: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown\",\n      logo: require(\"assets/img/logo-white.svg\"),\n      ORG_ID: \"NCSV3\",\n      alert: null,\n      swAlertOk: null,\n      show: false,\n      loginPopUP: false,\n      redirectUrl: \"\",\n      showWizardPopup: false,\n      redirectToLogin: false\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 14\n        }\n      }, this.getRoutes(routes)))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nvar dashboardWithNotificationStyles = withStyles(notificationsStyle)(Dashboard);\nvar dashboardWithNotificationAndSweetAlertStyles = withStyles(sweetAlertStyle)(dashboardWithNotificationStyles);\nvar dashboardWithNotificationAndSweetAlertUseStyles = withStyles(useStyles)(dashboardWithNotificationAndSweetAlertStyles);\nexport default withStyles(appStyle)(dashboardWithNotificationAndSweetAlertUseStyles);","map":{"version":3,"sources":["/Users/muhammadharis/Documents/Projects/Task/src/layouts/App.jsx"],"names":["React","PropTypes","Switch","Route","DashboardView","withStyles","routes","appStyle","notificationsStyle","sweetAlertStyle","useStyles","okButton","textAlign","backgroundColor","soundGoodButton","Dashboard","props","mainPanel","createRef","handleDrawerToggle","setState","mobileOpen","state","getActiveRoute","activeRoute","i","length","collapse","collapseActiveRoute","views","window","location","href","indexOf","layout","path","name","getRoutes","map","prop","key","component","sidebarMinimize","miniActive","resizeFunction","innerWidth","image","require","color","bgColor","hasImage","fixedClasses","logo","ORG_ID","alert","swAlertOk","show","loginPopUP","redirectUrl","showWizardPopup","redirectToLogin","classes","Component","propTypes","object","isRequired","dashboardWithNotificationStyles","dashboardWithNotificationAndSweetAlertStyles","dashboardWithNotificationAndSweetAlertUseStyles"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route } from \"react-router-dom\";\nimport DashboardView from '../views/Pages/Dashboard'\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport routes from \"routes.js\";\nimport appStyle from \"assets/jss/material-dashboard-pro-react/layouts/adminStyle.jsx\";\nimport notificationsStyle from \"assets/jss/material-dashboard-pro-react/views/notificationsStyle.jsx\";\nimport sweetAlertStyle from \"assets/jss/material-dashboard-pro-react/views/sweetAlertStyle.jsx\";\n\nconst useStyles = {\n  okButton: {\n    textAlign: \"center\",\n    backgroundColor: \"#A4A4A4 !important\",\n    \"&:hover\": {\n      backgroundColor: \"#fc5f45 !important\"\n    }\n  },\n  soundGoodButton: {\n    textAlign: \"center\",\n    backgroundColor: \"#405fc4 !important\",\n    \"&:hover\": {\n      backgroundColor: \"#405fc4 !important\"\n    }\n  }\n};\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobileOpen: false,\n      miniActive: false,\n      image: require(\"assets/img/sidebar-5.jpg\"),\n      color: \"blue\",\n      bgColor: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown\",\n      logo: require(\"assets/img/logo-white.svg\"),\n      ORG_ID: \"NCSV3\",\n      alert: null,\n      swAlertOk: null,\n      show: false,\n      loginPopUP: false,\n      redirectUrl: \"\",\n      showWizardPopup: false,\n      redirectToLogin: false\n    };\n  }\n  mainPanel = React.createRef();\n\n  handleDrawerToggle = () => {\n    this.setState({ mobileOpen: !this.state.mobileOpen });\n  };\n\n  getActiveRoute = routes => {\n    let activeRoute = \"Default Brand Text\";\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = this.getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return this.getRoutes(prop.views);\n      }\n      if (prop.layout === \"/app\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  sidebarMinimize = () => {\n    this.setState({ miniActive: !this.state.miniActive });\n  };\n  resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      this.setState({ mobileOpen: false });\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div //className={classes.wrapper}\n      >\n        <div \n        //className={classes.content}\n        >\n          <div \n          //className={classes.container}\n          >\n          \n             <Switch>{this.getRoutes(routes)}</Switch>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nconst dashboardWithNotificationStyles = withStyles(notificationsStyle)(\n  Dashboard\n);\n\nconst dashboardWithNotificationAndSweetAlertStyles = withStyles(\n  sweetAlertStyle\n)(dashboardWithNotificationStyles);\n\nconst dashboardWithNotificationAndSweetAlertUseStyles = withStyles(useStyles)(\n  dashboardWithNotificationAndSweetAlertStyles\n);\n\nexport default withStyles(appStyle)(\n  dashboardWithNotificationAndSweetAlertUseStyles\n);\n"]},"metadata":{},"sourceType":"module"}