{"ast":null,"code":"import _regeneratorRuntime from \"/Users/muhammadharis/Documents/Projects/Task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/muhammadharis/Documents/Projects/Task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// import {register,\n//   login,\n//   logout,} from \"../../../Api/coreApiCalls\"\nimport Axios from \"axios\";\nimport Cookie from \"js-cookie\";\nexport var ActionTypes = {\n  SIGNUP: \"SIGNUP\",\n  SIGNIN: \"SIGNIN\",\n  SIGNOUT: \"SIGNOUT\",\n  USER_REGISTER_REQUEST: \"USER_REGISTER_REQUEST\",\n  USER_REGISTER_SUCCESS: \"USER_REGISTER_SUCCESS\",\n  USER_REGISTER_FAIL: \"USER_REGISTER_FAIL\",\n  USER_LOGIN_REQUEST: \"USER_LOGIN_REQUEST\",\n  USER_LOGIN_SUCCESS: \"USER_LOGIN_SUCCESS\",\n  USER_LOGIN_FAIL: \"USER_LOGIN_FAIL\"\n};\nvar device = \"device\";\nvar location = \"location\";\n\nvar register = function register(email, password, confirmPassword, IP) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: USER_REGISTER_REQUEST,\n                payload: {\n                  email: email,\n                  password: password,\n                  confirmPassword: confirmPassword,\n                  IP: IP\n                }\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return Axios.post(\"https://staging-spot.dafriexchange.com/api/user\", {\n                email: email,\n                password: password,\n                confirmPassword: confirmPassword,\n                IP: IP,\n                device: device,\n                location: location\n              }, {\n                headers: {\n                  \"content-type\": \"text/plain\"\n                }\n              });\n\n            case 4:\n              data = _context.sent;\n              console.log(data);\n              dispatch({\n                type: USER_REGISTER_SUCCESS,\n                payload: data\n              });\n              Cookie.set(\"userInfo\", JSON.stringify(data));\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: USER_REGISTER_FAIL,\n                payload: _context.t0.message\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 10]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nvar login = function login(email, password, IP) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: USER_LOGIN_REQUEST,\n                payload: {\n                  email: email,\n                  password: password,\n                  IP: IP\n                }\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return Axios.post(\"https://staging-spot.dafriexchange.com/api/users/accessToken\", {\n                email: email,\n                password: password,\n                IP: IP,\n                device: device,\n                location: location\n              }, {\n                headers: {\n                  \"content-type\": \"text/plain\"\n                }\n              });\n\n            case 4:\n              data = _context2.sent;\n              dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data\n              });\n              Cookie.set(\"userInfo\", JSON.stringify(data));\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch({\n                type: USER_LOGIN_FAIL,\n                payload: _context2.t0.message\n              });\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 9]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\n\nexport { register, login };\nexport var signup = function signup(payload) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch({\n                type: ActionTypes.SIGNUP,\n                payload: payload\n              });\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var signin = function signin(payload) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              dispatch({\n                type: ActionTypes.SIGNIN,\n                payload: payload\n              });\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var signout = function signout(payload) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              dispatch({\n                type: ActionTypes.SIGNOUT,\n                payload: payload\n              });\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/muhammadharis/Documents/Projects/Task/src/services/redux/actions/index.js"],"names":["Axios","Cookie","ActionTypes","SIGNUP","SIGNIN","SIGNOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","device","location","register","email","password","confirmPassword","IP","dispatch","type","payload","post","headers","data","console","log","set","JSON","stringify","message","login","signup","signin","signout"],"mappings":"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","sourcesContent":["// import {register,\n//   login,\n//   logout,} from \"../../../Api/coreApiCalls\"\nimport Axios from \"axios\";\nimport Cookie from \"js-cookie\";\nexport const ActionTypes = {\n  SIGNUP: \"SIGNUP\",\n  SIGNIN: \"SIGNIN\",\n  SIGNOUT: \"SIGNOUT\",\n\nUSER_REGISTER_REQUEST : \"USER_REGISTER_REQUEST\",\nUSER_REGISTER_SUCCESS : \"USER_REGISTER_SUCCESS\",\nUSER_REGISTER_FAIL : \"USER_REGISTER_FAIL\",\n\nUSER_LOGIN_REQUEST : \"USER_LOGIN_REQUEST\",\nUSER_LOGIN_SUCCESS : \"USER_LOGIN_SUCCESS\",\nUSER_LOGIN_FAIL : \"USER_LOGIN_FAIL\",\n};\n\n\n\n\n\nconst device = \"device\";\nconst location = \"location\";\n\nconst register = (email, password, confirmPassword, IP) => async (dispatch) => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: { email, password, confirmPassword, IP },\n  });\n  try {\n    let data = await Axios.post(\n      \"https://staging-spot.dafriexchange.com/api/user\",\n      {\n        email,\n        password,\n        confirmPassword,\n        IP,\n        device,\n        location,\n      },\n      { headers: { \"content-type\": \"text/plain\" } }\n    );\n    console.log(data);\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n    Cookie.set(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({ type: USER_REGISTER_FAIL, payload: error.message });\n  }\n};\n\nconst login = (email, password, IP) => async (dispatch) => {\n  dispatch({ type: USER_LOGIN_REQUEST, payload: { email, password, IP } });\n  try {\n    let data = await Axios.post(\n      \"https://staging-spot.dafriexchange.com/api/users/accessToken\",\n      {\n        email,\n        password,\n        IP,\n        device,\n        location,\n      },\n      { headers: { \"content-type\": \"text/plain\" } }\n    );\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n    Cookie.set(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({ type: USER_LOGIN_FAIL, payload: error.message });\n  }\n};\n\nexport { register, login };\n\n\nexport const signup = payload => {\n  return async dispatch => {\n    dispatch({\n      type: ActionTypes.SIGNUP,\n      payload: payload\n    });\n  };\n};\n\nexport const signin = payload => {\n  return async dispatch => {\n    dispatch({\n      type: ActionTypes.SIGNIN,\n      payload: payload\n    });\n  };\n};\n\n\n\nexport const signout = payload => {\n  return async dispatch => {\n    dispatch({\n      type: ActionTypes.SIGNOUT,\n      payload: payload\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}